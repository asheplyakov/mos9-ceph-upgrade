---

- name: find out monitor interface
  shell: netstat -nptl | awk '/ceph-mon/ { sub(":.*", "", $4); print $4 }'
  register: monitor_ip

- name: find out mon data owner
  stat: >
    path=/var/lib/ceph/mon/{{ cluster_name }}-{{ inventory_hostname_short }}
  register: mon_dir_stat

- name: find out ceph-mon user
  command: >
    sed -rne
    '/^\s*exec\s+.*ceph-mon/ s/^.*--setuser\s+([^[:space:]]+).*$/\1/p'
    /etc/init/ceph-mon.conf
  register: ceph_mon_user

- name: find out ceph-mon group
  command: >
    sed -rne
    '/^\s*exec\s+.*ceph-mon/ s/^.*--setgroup\s+([^[:space:]]+).*$/\1/p'
    /etc/init/ceph-mon.conf
  register: ceph_mon_group

- name: stop ceph monitor (upstart)
  service: >
    name=ceph-mon
    state=stopped
    args=id={{ inventory_hostname_short }}
  when: ansible_service_mgr == "upstart"

- name: stop ceph monitor (systemd)
  service: >
    name=ceph-mon@{{ inventory_hostname_short }}
    state=stopped
  when: ansible_service_mgr == "systemd"

- name: fix mon data ownership
  file: >
    path=/var/lib/ceph/mon/{{ cluster_name }}-{{ inventory_hostname_short }}
    state=directory
    owner={{ ceph_mon_user.stdout }}
    group={{ ceph_mon_group.stdout }}
    mode=0770
    recurse=yes
  when:
    - ceph_mon_user.stdout != ''
    - mon_dir_stat.stat.pw_name != ceph_mon_user.stdout

- name: start ceph monitor (upstart)
  service: >
    name=ceph-mon
    state=started
    args=id={{ inventory_hostname_short }}
  when: ansible_service_mgr == "upstart"

- name: start ceph monitor (systemd)
  service:
    name=ceph-mon@{{ ansible_hostname }}
    state=started
  when: ansible_service_mgr == "systemd"

- name: wait for monitor to start up
  wait_for: >
    host={{ monitor_ip.stdout }}
    port=6789
    state=started
    timeout=60

- name: wait for monitor to join the quorum
  command: ceph -s --format json
  register: ceph_health_raw
  until: inventory_hostname_short in (ceph_health_raw.stdout|from_json)['quorum_names']
  retries: "{{ mon_restart_attempts }}"
  delay: "{{ mon_restart_delay }}"

