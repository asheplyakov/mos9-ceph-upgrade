---

- name: choose decapod repository
  set_fact:
    ceph_apt_repo: "{{ decapod_ceph_repo }}"
  when: "{{ use_decapod_ceph_repo|default(True)|bool }}"

- name: choose custom repository
  set_fact:
    ceph_apt_repo: "{{ custom_ceph_repo }}"
  when: "{{ use_custom_repo|default(False)|bool }}"

- name: choose upstream repository
  set_fact:
    ceph_apt_repo: "{{ ceph_community_repo }}"
  when: "{{ use_ceph_community_repo|default(False)|bool }}"

- name: make sure python-apt is installed
  package: >
    name=python-apt
    state=present

- name: make pinning rules for the custom packages
  template: >
    src=./templates/ceph.pref.j2
    dest=/etc/apt/preferences.d/ceph.pref
    owner=root
    group=root
    mode=0644
  when: "{{ not(use_mos_ceph|default(False)|bool) }}"

- name: enable untrusted repositories
  template: >
    src=./templates/enable_untrusted_repos.j2
    dest=/etc/apt/apt.conf.d/90_enable_untrusted_repos
    owner=root
    group=root
    mode=0644
  when: "{{ apt_enable_untrusted|default(False)|bool }}"

- name: disable untrusted repositories
  file: >
    path=/etc/apt/apt.conf.d/90_enable_untrusted_repos
    state=absent
  when: "{{ not(apt_enable_untrusted|default(False)|bool) }}"

- name: check if a proxy is required to connect to Internet
  shell: grep -r /etc/apt/apt.conf.d -h -i -e 'Acquire::http::Proxy' | sed -rne 's/^[^"]+"([^"]+).*$/\1/p' | sort -u
  register: apt_http_proxy
  changed_when: false
  failed_when: false
  when: "{{ not(apt_enable_untrusted|default(False)|bool) }}"

# apt-key in precise fails to initialize a keyring unless file already exists
- name: create repo keyring placeholder
  file: >
    path=/etc/apt/trusted.gpg.d/ceph.gpg
    state=touch
    mode=0644
    owner=root
    group=root
  when:
    - "{{ not(apt_enable_untrusted|default(False)|bool) }}"
    - "{{ ansible_distribution_release == 'precise' }}"

- name: import repo keyring from keyserver
  apt_key: >
    id={{ ceph_apt_repo.gpg_keyid }}
    keyserver={{ ceph_apt_repo.gpg_keyserver }}
    keyring=/etc/apt/trusted.gpg.d/ceph.gpg
  when:
    - "{{ not(apt_enable_untrusted|default(False)|bool) }}"
    - apt_http_proxy.stdout == ''
    - ceph_apt_repo.gpg_keyserver is defined

- name: import repo keyring from keyserver via proxy
  apt_key: >
    id={{ ceph_apt_repo.gpg_keyid }}
    keyserver={{ ceph_apt_repo.gpg_keyserver }}
    keyring=/etc/apt/trusted.gpg.d/ceph.gpg
  environment:
    http_proxy: "{{ apt_http_proxy.stdout }}"
  when:
    - "{{ not(apt_enable_untrusted|default(False)|bool) }}"
    - apt_http_proxy.stdout != ''
    - ceph_apt_repo.gpg_keyserver is defined

- name: import repo keyring from URL
  apt_key: >
    id={{ ceph_apt_repo.gpg_keyid }}
    url={{ ceph_apt_repo.gpg_keyurl }}
    keyring=/etc/apt/trusted.gpg.d/ceph.gpg
    state=present
  when:
    - "{{ not(apt_enable_untrusted|default(False)|bool) }}"
    - apt_http_proxy.stdout == ''
    - ceph_apt_repo.gpg_keyurl is defined

- name: import repo keyring from URL via proxy
  apt_key: >
    id={{ ceph_apt_repo.gpg_keyid }}
    url={{ ceph_apt_repo.gpg_keyurl }}
    keyring=/etc/apt/trusted.gpg.d/ceph.gpg
    state=present
  environment:
    http_proxy: "{{ apt_http_proxy.stdout }}"
  when:
    - "{{ not(apt_enable_untrusted|default(False)|bool) }}"
    - apt_http_proxy.stdout != ''
    - ceph_apt_repo.gpg_keyurl is defined


- name: remove stale /etc/apt/sources.list.d/decapod_ceph.list
  file: >
    name=/etc/apt/sources.list.d/decapod_ceph.list
    state=absent

- name: add the repo with custom packages
  apt_repository: >
    repo="{{ ceph_apt_repo.url }}"
    filename=decapod_ceph
    state=present
    update_cache=yes
